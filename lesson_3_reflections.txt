When would you want to use a remote repository rather than keeping all your work local?
    When it is required to collaborate with others on the development of the software, it is better to share it through a remote repository. This also gives a platform to publish our work to the public. Also a back up.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
    I may be making changes at my local repository. I would like to control the merging of the remote to my local myself (that way I can assure that all the changes are logical).

Describe the differences between forks, clones, and branches. When would you use one instead of another?
    Fork - Want to use the repository maintained by another person. When I fork it, it will be available in my github, then I can modify it, without affecting the original. But there will be a link back to the original - that way the credit is acknowledged.
    Clone - If I want to copy a repository. 
    Branch - If I want to make a version to include some additional changes, which I don't want it the master, as of now.

What is the benefit of having a copy of the last known state of the remote stored locally?
    Can merge remote changes to the local. That way when the local version is moved to remote, there won't be be much confusion on merge.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
    May be over mails through zipped files. Or a central server. Or a shared cloud storage. This may be easier to share the code. Then it will be difficult to know the changes and the history.
